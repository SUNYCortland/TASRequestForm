@model TASRequestForm.Web.Areas.Admin.ViewModels.RequestsTasApproveViewModel

@{
    ViewBag.Title = "View";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
<div class="container-fluid cort-white">
    <div class="container">
        <div class="row" style="margin-top: 20px;">
            <div class="col-lg-3 col-md-3 col-sm-4 col-xs-12">
                @{ Html.RenderAction("LoadMenu", "Nav", new { active = "pending", area = "Admin" }); }
            </div>
            <div class="col-lg-9 col-md-9 col-sm-8 col-xs-8">
                <fieldset>
                    <div class="row">
                        <div class="col-lg-8 col-md-8 col-sm-12 col-xs-12">
                            <div class="row">
                                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                    <div class="form-group">
                                        <label for="txtStudentName" class="control-label">Student Name</label>
                                        <input type="text" id="txtStudentName" class="form-control" value="@Model.FormEntry.StudentIdentity.FirstName @Model.FormEntry.StudentIdentity.LastName" readonly />
                                    </div>
                                </div>
                                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                    <div class="form-group">
                                        <label for="txtStudentCNumber" class="control-label">C#</label>
                                        <input type="text" id="txtStudentCNumber" class="form-control" value="@Model.FormEntry.StudentIdentity.CNumber" readonly />
                                    </div>
                                </div>
                                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                    <div class="form-group">
                                        @Html.LabelFor(x => x.FormEntry.PhoneNumber, new { @class = "control-label" })
                                        @Html.TextBoxFor(x => x.FormEntry.PhoneNumber, new { @class = "form-control", placeholder = "No phone number was entered.", @readonly = true })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                    <div class="form-group">
                                        @Html.LabelFor(x => x.FormEntry.Course, new { @class = "control-label" })
                                        @Html.TextBoxFor(x => x.FormEntry.Course, new { @class = "form-control", placholder = "No course was selected.", @readonly = true })
                                    </div>
                                </div>
                                <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                    <div class="form-group">
                                        <label for="FormEntry_CourseTime" class="control-label">Class times:</label>
                                        @Html.TextBoxFor(x => x.FormEntry.CourseTime, new { @class = "form-control", placeholder = "No class time was selected.", @readonly = true })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12">
                            <div class="form-group">
                                <label class="control-label">Date Submitted</label>
                                <input class="form-control" type="text" value="@Model.FormEntry.DateSubmitted.ToString()" readonly="readonly" />
                            </div>
                            <label class="control-label">Accommodations</label>
                            @if (Model.FormEntry.GeneralAccomodations.Count == 0)
                            {
                                <p>
                                    No accommodations were selected.
                                </p>
                            }
                            @foreach (var accomodation in Model.FormEntry.GeneralAccomodations)
                            {
                                <div class="checkbox small">
                                    <label>
                                        <input type="checkbox" checked disabled /> @accomodation.Value
                                    </label>
                                </div>
                            }
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-12">
                            <hr />
                        </div>
                        @if (Model.FormEntry.QuizTimes.Count > 0)
                        {
                            <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12">
                                <table class="table table-bordered table-striped">
                                    <thead>
                                        <tr>
                                            <th>
                                                <center>Quizzes</center>
                                                <p class="small" style="font-weight: normal">Dates &amp; Times - must be completed between 8:00 a.m. and 4:00 p.m.</p>
                                            </th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var quizTime in Model.FormEntry.QuizTimes)
                                        {
                                            <tr>
                                                <td>
                                                    <span>@quizTime.Title - @quizTime.Date.ToString("M/d/yyyy h:mm tt")</span>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                        @if (Model.FormEntry.ExamTimes.Count > 0)
                        {
                            <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12">
                                <table class="table table-bordered table-striped">
                                    <thead>
                                        <tr>
                                            <th><center>Exams</center><p class="small" style="font-weight: normal">Dates &amp; Times - must be completed between 8:00 a.m. and 4:00 p.m.</p></th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var examTime in Model.FormEntry.ExamTimes)
                                        {
                                            <tr>
                                                <td>
                                                    <span>@examTime.Title - @examTime.Date.ToString("M/d/yyyy h:mm tt")</span>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                        @if (Model.FormEntry.FinalExamTime != null)
                        {
                            <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12">
                                <table class="table table-bordered table-striped">
                                    <thead>
                                        <tr>
                                            <th><center>Final Exam</center><p class="small" style="font-weight: normal">Date &amp; Time - must be completed between 8:00 a.m. and 4:00 p.m.</p></th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr>
                                            <td>
                                                <span>@Model.FormEntry.FinalExamTime.Title - @Model.FormEntry.FinalExamTime.Date.ToString("M/d/yyyy h:mm tt")</span>
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        }
                    </div>
                    <div class="row">
                        <div class="col-lg-12">
                            <hr />
                        </div>
                        @if (Model.FormEntry.QuizTimes.Count > 0)
                        {
                            <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12">
                                <label class="control-label">For quizzes, students may use:</label>
                                @if (Model.FormEntry.QuizAccomodations.Count == 0)
                                {
                                    <p class="small">
                                        No quiz accomodations were selected.
                                    </p>
                                }
                                @foreach (var accomodation in Model.FormEntry.QuizAccomodations.OrderBy(x => x.Value))
                                {
                                    <div class="checkbox small">
                                        <label>
                                            <input type="checkbox" checked disabled /> @accomodation.Value
                                        </label>
                                    </div>
                                }
                            </div>
                        }
                        @if (Model.FormEntry.ExamTimes.Count > 0)
                        {
                            <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12">
                                <label class="control-label">For exams, students may use:</label>
                                @if (Model.FormEntry.ExamAccomodations.Count == 0)
                                {
                                    <p class="small">
                                        No exam accomodations were selected.
                                    </p>
                                }
                                @foreach (var accomodation in Model.FormEntry.ExamAccomodations.OrderBy(x => x.Value))
                                {
                                    <div class="checkbox small">
                                        <label>
                                            <input type="checkbox" checked disabled /> @accomodation.Value
                                        </label>
                                    </div>
                                }
                            </div>
                        }
                        @if (Model.FormEntry.FinalExamTime != null)
                        {
                            <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12">
                                <label class="control-label">For final exam, students may use:</label>
                                @if (Model.FormEntry.FinalExamAccomodations.Count == 0)
                                {
                                    <p class="small">
                                        No final exam accomodations were selected.
                                    </p>
                                }
                                @foreach (var accomodation in Model.FormEntry.FinalExamAccomodations.OrderBy(x => x.Value))
                                {
                                    <div class="checkbox small">
                                        <label>
                                            <input type="checkbox" checked disabled /> @accomodation.Value
                                        </label>
                                    </div>
                                }
                            </div>
                        }
                    </div>
                    <div class="row">
                        <div class="col-lg-12">
                            <hr />
                        </div>
                        <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                            <p>
                                <strong>The test will be delivered to TAS by</strong>: <span class="small">@Model.FormEntry.DeliveryType</span>
                            </p>
                            <p>
                                <strong>It will be returned by</strong>: <span class="small">@Model.FormEntry.ReturnType</span>
                            </p>
                        </div>
                        <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                            <div class="form-group">
                                <label for="txtInstructorName" class="control-label">Instructor Name</label>
                                <input type="text" id="txtInstructorName" class="form-control" value="@Model.FormEntry.ProfessorIdentity.FirstName @Model.FormEntry.ProfessorIdentity.LastName" readonly="readonly" />
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(x => x.FormEntry.ProfessorEmail, new { @class = "control-label" })
                                @Html.TextBoxFor(x => x.FormEntry.ProfessorEmail, new { @class = "form-control", placeholder = "No email address was entered", @Value = Model.FormEntry.ProfessorEmail, @readonly = "readonly" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(x => x.FormEntry.ProfessorCampusAddress, new { @class = "control-label" })
                                @Html.TextBoxFor(x => x.FormEntry.ProfessorCampusAddress, new { @class = "form-control", placeholder = "No campus address was entered.", @Value = Model.FormEntry.ProfessorCampusAddress, @readonly = "readonly" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(x => x.FormEntry.ProfessorReachedBy, new { @class = "control-label" })
                                @Html.TextBoxFor(x => x.FormEntry.ProfessorReachedBy, new { @class = "form-control", placeholder = "No additional contact information entered", @Value = Model.FormEntry.ProfessorReachedBy, @readonly = "readonly" })
                            </div>
                        </div>
                        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                            <h4 class="page-header" style="margin-top: 10px;">Notes (viewable by student, instructor, and Test Administration staff)</h4>
                            @if (Model.FormEntry.Notes.Count == 0)
                            {
                                <p>
                                    No notes have been added to this request.
                                </p>
                            }
                            @foreach (var note in Model.FormEntry.Notes)
                            {
                                <strong class="small">@note.AddedByIdentity.FirstName @note.AddedByIdentity.LastName (@note.Type.ToUpper()) says:</strong>
                                <div class="alert" style="background-color: #f9f9f9; border: 1px solid #ddd; padding-bottom:20px; margin-top: 5px">
                                    <p class="small">
                                        @note.Value
                                    </p>
                                    <small class="pull-right" style="font-size: 12px"><em>@note.AddedDate</em></small>
                                </div>
                                <hr />
                            }
                            @Html.ValidationMessageFor(x => x.Note)
                            @Html.TextAreaFor(x => x.Note, new { rows = "5", placeholder = "Enter any notes you would like to attach to this request. If a request is declined, this note will be emailed to the student.", @class = "form-control" })
                        </div>
                    </div>
                    <div class="row" style="margin-bottom: 40px; margin-top: 15px;">
                        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                            @Html.CheckBoxFor(x => x.Denied, new { style = "display: none;" })
                            <input type="submit" class="btn btn-success" value="Approve Request" />
                            <input type="submit" id="btnDenyRequest" class="btn btn-danger" value="Decline Request" />
                        </div>
                    </div>
                </fieldset>
            </div>
        </div>
    </div>
</div>
}

@section scripts {
    <script type="text/javascript">
    $(document).ready(function () {
        $("#btnDenyRequest").on("click", function () {
            $("#Denied").prop("checked", true);
        });
    })
    </script>
}